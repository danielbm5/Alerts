אני מנהל צוות בחברת תוכנה.
הצוות שלי נקרא שרת מידעים.
צוות אחר שמנהל אותו הדר נקרא RTS+ ATLAS+K300
אנחנו מתעסקים במניות בארץ ובחול.
יש לנו מערכת מסחר מובייל אפליקציה שאנחנו רוצים לפתח מערכת לשליחת התראות.
לדוגמא, מערכת שתשלח התראה לכל מי שמחזיק את המניה של גוגל כאשר גוגל עולה/יורדת X אחוזים,
מגיעה לשיא/שפל שנתי וכו'.
המידע שיש אצלי זה סטטי וכולל מחיר סגירה של אתמול, מחירי היסטוריה לאורך השנים האחרונות, שיא ושפל שנה אחרונה וכו'.
אצל הדר יש את כל המחירים ב REAL TIME.
אני צריך בבקשה תכנון ארכיטקטורה לפרוייקט הזה,
כך שנוכל לשלוח התראות כאלה:
התראה כללית לכל מי שמחזיק מניית גוגל (לדוגמא שים לב גוגל היום בחופש) 
התראה לכל מי שעוקב אחרי גוגל (גם זה מידע שנמצא אצל הדר).
התראה למי שמחזיק גוגל וגוגל עלתה או ירדה X אחוזים.
התראה למי שמחזיק גוגל וגוגל הגיעה לשפל/שיא שנתי.

כלומר יש קבוצות של שלדים (לדוגמא מחזיקים בנייר, בעלי גישה לניירות זרים וכו'),
שזה בעצם פילטור של אוכלוסיה.
הלקוחות שמורים ברמת כרטיס (123456).

למשל, אני יגיד להדר תביא לי מי שמחזיק.עוקב אחר גוגל והוא יחזיר לי רשימת כרטיסים ומניות.
אני אעשה WEBSOCKET מולו כדי לקבל מחירים של ניירות ואשלח אותם לראביט,
ואם ההתראה היא רק למחזיקים אז אפילו לא צריך WEB SOCKET אלא ישר לשלוח רק למחזיקים.

חשוב לי גם לשמור את כל ההתראות שנשלחו ללקוחות לצורך תיעוד פנימי.
חשוב לי גם שכל ההתראות יהיו כברירת מחדל פעילות לכל הלקוחות, אבל הלקוח יוכל לבחור לכבות חלק מההתראות.
התראות מסוג שלדים - לקוחות לא יוכלו לקבוע האם לקבל או לא, כולם יקבלו, בניגוד להתראות הרגילות.
כלומר לכל לקוח שמור ב DB האם הוא מאפשר התראה או לא (יכול להיות שרוצה רק התראות מסוג מסויים בלבד - למשל רק עולה או רק יורדת X אחוזים (ה X הוא קבוע במערכת שלנו ולא ניתן לשינוי משתמש).
אירועים דלתא בלבד - למשל ניירות שהפסיקו לעקוב/לא מחזיקים יותר אז לא צריך להאזין.
חשבתי ליצור טבלת BLACKLIST שבה יהיה רשומות של כרטיס + התראות שהוא לא מעוניין לקבל.


הרכיב UI בעצם משמש כממשק אדמין שלנו, שדרכו ניתן לבחור שלד, מניה, ולשלוח התראה לפי שלד.
הוא יציג את השלדים ואת סוגי ההתראות שקיימות (עליה/ירידה X אחוזים,שיא/שפל ...).
לא ניתן ליצור שלדים או התראות מעבר למה שאני מגדיר ב DB

כל הלוגיקה והשליטה במערכת תהיה בשרת מידעים, המידע שחסר בשרת יגיע מהשרת של הדר.
מידעים רץ בקלאסטר קוברנטיס.
משתמש ב DB שונים כמו ELK,MONGO,SQL,REDIS,RABBIT.
מצ"ב ארכיטקטורה.


חשבתי על משהו כזה:
1.רכיב STOCKSFETCHER - יקבל ממקור פנימי בחברה את המחזיקים ועוקבים אחר ניירות, יישמור את זה ברדיס ויישלח ל RABBIT בצורה של מזהה מניה,מחזיקים/קונים,רשימת כרטיסים, למשל: GOOGL:HOLDERS:[12345,2345,1234]

2.רכיב PRICESTREAMER שקורא ממקור חיצוני נתוני זמן אמת על ניירות שהתקבלו לראביט בסעיף 1, את המחירים שהוא מקבל באיבנטים רבים הוא שולח לתור נוסף בראביט.
price_alert:googl.

3.DataCalculator . רכיב שקורא את המחירים מסעיף 2. בנוסף הוא קורא מרדיס נתונים סטטיים שכבר קיימים שם (למשל מחיר בסיס, גבוה/נמוך יומי,גבוה/נמוך שנתי וכו').
והוא בודק האם המחיר שהוא קיבל למניה גבוה או נמוך מאחד הנתונים ברדיס - אם כן - מעדכן אותו. כך תמיד הרדיס שלי מעודכן.

4.TRIGGER CHECK - רכיב שפונה לרדיס כל X דקות, קורא את כל המחזיקים והעוקבים וגם את הנתונים על המניות. בודק מול הטבלאות ב SQL מה ההתראות הפעילות והאם ברדיס יש נתונים שמתאימים להתראות האלה
ושצריך לשלוח התראה (למשל אם ברדיס יש גבוה יומי 5 אחוז מעל המחיר פתיחה) וגם בודק שכבר לא נשלחה התראה כזו היום (כי אם כן - לא נשלח עוד פעם). כמובן גם לוודא שהכרטיסים לא מוגדרים ב BLACKLIST.
במידה והכל קורה - שולח לראביט לתור חדש הודעה לרכיב הבא.

6.PUSH  -אחראי לשלוח פושים. יישמור ברדיס תיעוד בצורה של alertsent:alerttype:googl:1234:true לתיעוד של איזה התראה נשלחה לאיזה כרטיסים ומתי.
הוא יישלח את ה PUSH לשרת פושים שיש בחברה.

7. UI  - ממשק ניהול בו אדמין המערכת יוכל לראות את ההתראות ושלדים קיימים, יוכל לבחור לשלוח משם התראות שלד והלהפעיל/לכבות התראות רגילות.



מצ"ב תכנון ארכיטקטורה(לא סגור ב 100 אחוז).
תן לי הערות ושינויים שאתה ממליץ.
אני משתמש כיום במערכת שלי ב SQL REDIS MONGO ELK (נראה לי שלא צריך MONGO/ELK ואפשר לשים הכל ברדיס ו SQL אבל מה שאתה חושב).

הערות:
כל לקוח באפליקציה יוכל להיות מקושר ליותר משלד וליותר מסוג התראה אחת.
הוא יוכל לבחור התראות שהוא מעוניין לקבל התראות עבורן (ברירת מחדל - מופעל), התראות של סוגי שלדים הוא לא יוכל לבטל.
קיימת טבלה ב SQL DB (USER_DEVICES) שמכילה את כל הכרטיסים ולכל כרטיס את הפוש טוקן שלו.
לקוחות קצה לא יוכלו לבחור custom_percentage  - זה נקבע ב DB שלי בלבד.
הרדיס שאני משתמש בו הוא REDIS CLUSTER.
הכל ב .NETCORE 3.1

זה התכנון DB שלי עד כה:




מבנה Redis Keys

Static Data (מתעדכן יומית)
stock:static:GOOGL -> {
    "symbol": "GOOGL",
    "lastClose": 150.50,
    "yearHigh": 180.00,
    "yearLow": 120.00,
    "dailyOpen": 151.00,
    "dailyHigh": 155.00,
    "dailyLow": 149.00,
    "lastUpdated": "2025-01-15T08:00:00Z"
}



Holdings & Watchers (מתעדכן כל X דקות)
stock:holders:GOOGL -> ["123456", "234567", "345678"]
stock:watchers:GOOGL -> ["123456", "789012", "456789"]
audience:Holders:GOOGL -> ["123456", "234567"]
audience:Watchers:GOOGL -> ["123456", "789012"]
audience:ForeignAccess:GOOGL -> ["123456", "234567"]




Alert Tracking (למנוע שכפולים)
alert:sent:daily:GOOGL:PriceUp:123456 -> "2025-01-15" (TTL: 24 hours)
alert:sent:weekly:GOOGL:YearHigh:123456 -> "2025-W03" (TTL: 7 days)


Real-time Prices
stock:price:GOOGL -> {
    "symbol": "GOOGL",
    "price": 152.75,
    "change": 2.25,
    "changePercent": 1.49,
    "timestamp": "2025-01-15T14:30:00Z"
}







